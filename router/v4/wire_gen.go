// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package v4

import (
	"github.com/google/wire"
	"github.com/labstack/echo/v4"
	"github.com/traPtitech/traQ/repository"
	"github.com/traPtitech/traQ/router/v4/messages"
	"github.com/traPtitech/traQ/service/channel"
	"github.com/traPtitech/traQ/service/message"
	message2 "github.com/traPtitech/traQ/utils/message"
)

// Injectors from wire.go:

// wire初期化関数
func InitializeV4Router(repo repository.Repository, channelManager channel.Manager, messageManager message.Manager, replacer *message2.Replacer) *V4Router {
	service := messages.NewService(repo, channelManager, messageManager, replacer)
	v4Router := ProvideV4Router(service)
	return v4Router
}

// wire.go:

// V4Router v4専用のルーター
type V4Router struct {
	MessageService *messages.Service
}

func (r *V4Router) SetUp(e *echo.Group) {
	api := e.Group("/v4")
	{
		api.Any(r.MessageService.Path+"*", echo.WrapHandler(r.MessageService.Handler))
	}
}

// V4Routerの構築
func ProvideV4Router(messageService *messages.Service) *V4Router {
	return &V4Router{
		MessageService: messageService,
	}
}

// wireセット
var V4Set = wire.NewSet(messages.NewService, ProvideV4Router)
